version: '3'
services:
  Nginx:
    image: nginx:latest
    container_name: ${NGINX_HOSTNAME}
    ports:
      - 80:80
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      MongoDB:
        condition: service_started
      MariaDB:
        condition: service_healthy
      API:
        condition: service_started
    networks:
      - fortune-net

  MariaDB:
    image: mariadb:10-jammy
    container_name: ${MARIADB_HOSTNAME}
    restart: always
    environment:
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
    ports:
      - ${MARIADB_PORT}:${MARIADB_PORT}
    volumes:
      - ./mariadb/data:/var/lib/mariadb
      - ./mariadb/conf:/etc/mariadb/conf.d
      - ./mariadb/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -P ${MARIADB_PORT} -u${MARIADB_USER} -p${MARIADB_PASSWORD} | grep 'mysqld is alive' || exit 1"]
      interval: 10s
      timeout: 2s
      retries: 3
    networks:
      - fortune-net

  MongoDB:
    image: mongo:6-jammy
    container_name: ${MONGODB_HOSTNAME}
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    command: ["mongod", "--bind_ip_all"] 
    ports:
      - ${MONGODB_PORT}:${MONGODB_PORT}
    volumes:
      - ./mongodb/data:/data/db
      - ./mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - fortune-net

  API:
    image: chiehyu914/fortune-tracker:latest
    container_name: ${API_HOST}
    restart: always
    ports: 
      - ${API_PORT}:${API_PORT}
    env_file:
      - ./app.env
    volumes:
      - ./api/logs:/app/logs
    depends_on:
      MongoDB:
        condition: service_started
      MariaDB:
        condition: service_healthy
    networks:
      - fortune-net
  
networks:
  fortune-net:
    driver: bridge
